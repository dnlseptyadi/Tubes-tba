/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package innameofgod1;

import java.util.ArrayList;

/**
 *
 * @author Daniel Septyadi
 */
public class Main extends javax.swing.JFrame {
    public static ArrayList<LexicalAnalyzer> lexer = new ArrayList<LexicalAnalyzer>();
    private int count;
    public static String temp = "";
    public static String input;
    public static ArrayList<Integer> token = new ArrayList<Integer>();
    private int i = 0;
    
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        analyzebtn = new javax.swing.JButton();
        tNotif = new javax.swing.JTextField();
        tInput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("ANALISIS LEXICAL");

        jLabel2.setText("Input");

        analyzebtn.setText("Analisis");
        analyzebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyzebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(analyzebtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tInput, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(tNotif, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(tNotif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(analyzebtn)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void analyzebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyzebtnActionPerformed
        if(tInput.getText().isEmpty()){
            System.out.println("Silakan isi input");;
        }else{    
            input = tInput.getText();
            PrintChar();
            LexicAnalyze();
            
            hasilAnalisis ha = new hasilAnalisis(lexer);
            this.setVisible(false);
            ha.setLocationRelativeTo(null);
            ha.setVisible(true);
        }
    }//GEN-LAST:event_analyzebtnActionPerformed
    private void PrintChar(){
        temp = (input).toString();
        count = (temp).length();
        System.out.println("Panjang Karakter Array : " + (temp).length());
    }
    public void LexicAnalyze(){
        defString();
    }
    public void defString(){
        String temp = tInput.getText();
        char[] cha = temp.toCharArray();
        ArrayList<String> tumpuk = new ArrayList<>();
        ArrayList<Integer> token = new ArrayList<>();
        int i = 0;
        while (i < temp.length()){
            if (i != temp.length() && (cha[i] == 'p' || cha[i] == 'q' || cha[i] == 'r' || cha[i] == 's')){
                i++;
                if (i != temp.length()){
                    if(cha[i] == ' '){
                        token.add(1);
                        i++;
                    }else {
                        System.out.println("Error");
                        break;
                    }
                }else {
                    token.add(1);
                }
            }else if (i != temp.length() && cha[i] == 'n'){
                i++;
                if (i != temp.length() && cha[i] == 'o'){
                    i++;
                    if(i != temp.length() && cha[i] == 't'){
                        i++;
                        if(i != temp.length()){
                            if (cha[i] == ' '){
                                token.add(2);
                                i++;
                            }else {
                                System.out.println("Error");
                                break;
                            }
                        }else {
                            token.add(2);
                            i++;
                        }
                    }else{
                        System.out.println("Error");
                        break;
                    }
                }else {
                    System.out.println("Error");
                    break;
                }
            }else if (i != temp.length() && cha[i] == 'a'){
                i++;
                if (i != temp.length() && cha[i] == 'n'){
                    i++;
                    if (i != temp.length() && cha[i] == 'd'){
                        i++;
                        if (i != temp.length()){
                            if (cha[i] == ' '){
                                token.add(3);
                                i++;
                            }else {
                                System.out.println("Error");
                                break;
                            }
                        }else {
                            token.add(3);
                            i++;
                        }
                    }else {
                        System.out.println("Error");
                        break;
                    }
                }else {
                    System.out.println("Error");
                    break;
                }
            }else if (i != temp.length() && cha[i] == 'x'){
                i++;
                if (i != temp.length() && cha[i] == 'o'){
                    i++;
                    if (i != temp.length() && cha[i] == 'r'){
                        i++;
                        if (i != temp.length()){
                            if (cha[i] == ' '){
                                token.add(5);
                                i++;
                            }else {
                                System.out.println("Error");
                                break;
                            }
                        }else {
                            token.add(3);
                            i++;
                        }
                    }else {
                        System.out.println("Error");
                    }
                }else {
                    System.out.println("Error");
                    break;
                }
            }else if (i != temp.length() && cha[i] == 'o'){
                i++;
                if (i != temp.length() && cha[i] == 'r'){
                    i++;
                    if (i != temp.length()){
                        if (cha[i] == ' '){
                            token.add(4);
                            i++;
                        }else {
                            System.out.println("Error");
                            break;
                        }
                    }else {
                        token.add(4);
                        i++;
                    }
                }else {
                    System.out.println("Error");
                    break;
                }
            }else if (i != temp.length() && cha[i] == 'i'){
                i++;
                if (i != temp.length() && cha[i] == 'f'){
                    i++;
                    if (i != temp.length()){
                        if (cha[i] == 'f'){
                            i++;
                            if (i != temp.length()){
                                if (cha[i] == ' '){
                                    token.add(8);
                                    i++;
                                }else {
                                    System.out.println("Error");
                                    break;
                                }
                            }else {
                                token.add(8);
                                i++;
                            }
                        }else if (i != temp.length()){
                            if (cha[i] == ' '){
                                token.add(6);
                                i++;
                            }else {
                                System.out.println("Error");
                                break;
                            }
                        }else {
                            token.add(6);
                            i++;
                        }
                    }else {
                        System.out.println("Error");
                        break;
                    }
                }else {
                    System.out.println("Error");
                    break;
                }
            //memberikan token then
            }else if (i != temp.length() && cha[i] == 't'){
                i++;
                if (i != temp.length() && cha[i] == 'h'){
                    i++;
                    if (i != temp.length() && cha[i] == 'e'){
                        i++;
                        if (i != temp.length() && cha[i] == 'n'){
                            i++;
                            if (i != temp.length()){
                                if (cha[i] == ' '){
                                    token.add(7);
                                    i++;
                                }else {
                                    System.out.println("Error");
                                    break;
                                }
                            }else {
                                token.add(7);
                                i++;
                            }
                        }else {
                            System.out.println("Error");
                            break;
                        }
                    }else {
                        System.out.println("Error");
                        break;
                    }
                }else {
                    System.out.println("Error");
                    break;
                }
            //memberikan token kurung buka '('    
            }else if (i != temp.length() && cha[i] == '('){
                i++;
                if (i != temp.length()){
                    if (cha[i] == ' '){
                        token.add(9);
                        i++;
                    }else {
                        System.out.println("Error");
                        break;
                    }
                }else {
                    token.add(9);
                    i++;
                }
            //memberikan token kurung tutup ')'
            }else if (i != temp.length() && cha[i] == ')'){
                i++;
                if (i != temp.length()){
                    if (cha[i] == ' '){
                        token.add(10);
                        i++;
                    }else {
                        System.out.println("Error");
                        break;
                    }
                }else {
                    token.add(10);
                    i++;
                }
            }else {
                System.out.println("Error");
                break;
            }
        }
//=====================================================================================================================
//VER 1.
//        int i = 0;
//        while (i < temp.length()){
//            //memberikan token {p,q,r,s}
//            if((temp.charAt(i)=='p') || (temp.charAt(i)=='q') || (temp.charAt(i)=='r') || (temp.charAt(i)=='s')){
//                i++;
//                if(i != temp.length()){
//                    if(temp.charAt(i)== ' '){
//                        token.add(1);
//                        i++;
//                    }else {
//                        System.out.println("Error");
//                        break;
//                    }
//                }else {
//                    token.add(1);
//                }
//            }
//            //memberikan token not
//            else if(temp.charAt(i)=='n'){
//                i++;
//                if(temp.charAt(i)=='o'){
//                    i++;
//                    if(temp.charAt(i)=='t'){
//                        i++;
//                        if(i != temp.length()){
//                            if(temp.charAt(i)==' '){
//                                token.add(2);
//                                i++;
//                            }else {
//                                System.out.println("Error");
//                                break;
//                            }
//                        }else{
//                            token.add(2);
//                            i++;
//                        }
//                    }else{
//                        System.out.println("Error");
//                        break;
//                    }
//                }else {
//                    System.out.println("Error");
//                    break;
//                }
//            }
//            //memberikan token and
//            else if(temp.charAt(i)=='a'){
//                i++;
//                if(temp.charAt(i)=='n'){
//                    i++;
//                    if(temp.charAt(i)=='d'){
//                        i++;
//                        if(i != temp.length()){
//                            if(temp.charAt(i)== ' '){
//                                token.add(3);
//                                i++;
//                            }else{
//                                System.out.println("Error");
//                                break;
//                            }
//                        }else {
//                            token.add(3);
//                            i++;
//                        }
//                    }else {
//                        System.out.println("Error");
//                        break;
//                    }
//                }else {
//                    System.out.println("Error");
//                    break;
//                }
//            }
//            //memberikan token xor
//            else if(i != temp.length() && temp.charAt(i)== 'x'){
//                i++;
//                if (i != temp.length() && temp.charAt(i)== 'o'){
//                    i++;
//                    if(i != temp.length() && temp.charAt(i)== 'r'){
//                        i++;
//                        if(i != temp.length()){
//                            if(temp.charAt(i)== ' '){
//                                token.add(3);
//                                i++;
//                            }else {
//                                System.out.println("Error");
//                                break;
//                            }
//                        }else {
//                            token.add(5);
//                            i++;
//                        }
//                    }else {
//                        System.out.println("Error");
//                        break;
//                    }
//                }else {
//                    System.out.println("Error");
//                    break;
//                }
//            }
//            //memberikan token or
//            else if (i != temp.length() && temp.charAt(i)== 'o'){
//                i++;
//                if(i != temp.length() &&  temp.charAt(i)== 'r'){
//                    i++;
//                    if(i != temp.length()){
//                        if (temp.charAt(i)== ' '){
//                            token.add(4);
//                            i++;
//                        }else {
//                            System.out.println("Error");
//                            break;
//                        }
//                    }else {
//                        token.add(4);
//                        i++;
//                    }
//                }else {
//                    System.out.println("Error");
//                    break;
//                }
//            }
//            //memberikan token if atau iff
//            else if (i != temp.length() && temp.charAt(i) == 'i'){
//                i++;
//                if (i != temp.length() && temp.charAt(i)== 'f') {
//                    i++;
//                    if(i != temp.length()){
//                        if(temp.charAt(i)== 'f'){
//                            i++;
//                            if(i != temp.length()){
//                                if(temp.charAt(i)== ' '){
//                                    token.add(8);
//                                    i++;
//                                }else {
//                                    System.out.println("Error");
//                                    break;
//                                }
//                            }else {
//                                token.add(8);
//                                i++;
//                            }
//                        }else if(i != temp.length()){
//                            if(temp.charAt(i)== ' '){
//                                token.add(6);
//                                i++;
//                            }else {
//                                System.out.println("Error");
//                                break;
//                            }
//                        }else {
//                            token.add(6);
//                            i++;
//                        }
//                    }else {
//                        System.out.println("Error");
//                        break;
//                    }
//                }else {
//                    System.out.println("Error");
//                    break;
//                }
//            }
//            //memberikan token then
//            else if (i != temp.length() && temp.charAt(i)== 't') {
//                i++;
//                if(i != temp.length() && temp.charAt(i)== 'h'){
//                    i++;
//                    if(i != temp.length() && temp.charAt(i)== 'e'){
//                        i++;
//                        if(i != temp.length() && temp.charAt(i)== 'n'){
//                            i++;
//                            if(i != temp.length()){
//                                if(temp.charAt(i)== ' '){
//                                    token.add(7);
//                                    i++;
//                                }else {
//                                    System.out.println("Error");
//                                    break;
//                                }
//                            }else {
//                                token.add(7);
//                                i++;
//                            }
//                        }else { 
//                            System.out.println("Error");
//                            break;
//                        }
//                    }else{
//                        System.out.println("Error");
//                        break;
//                    }
//                }else{
//                    System.out.println("Error");
//                    break;
//                }
//            }
//            //memberikan token buka kurung '('
//            else if(i != temp.length() && temp.charAt(i)== '('){
//                i++;
//                if(i != temp.length()){
//                    if(temp.charAt(i)== ' '){
//                        token.add(9);
//                        i++;
//                    }else {
//                        System.out.println("Error");
//                        break;
//                    }
//                }else {
//                    token.add(9);
//                    i++;
//                }
//            }
//            //memberikan token tutup kurung ')'
//            else if(i != temp.length() && temp.charAt(i)== ')'){
//                i++;
//                if(i != temp.length()){
//                    if(temp.charAt(i)== ' '){
//                        token.add(10);
//                        i++;
//                    }else {
//                        System.out.println("Error");
//                        break;
//                    }
//                }else {
//                    token.add(10);
//                    i++;
//                }
//            }else {
//                System.out.println("Error");
//                break;
//            }
//        }
//=====================================================================================================================
//VER 2.
//        int i = 0;
//        while(i<temp.length()){
//            //memberikan token(p,q,r,s)
//            if((temp.charAt(i)=='p')||(temp.charAt(i)=='q')||(temp.charAt(i)=='r')||(temp.charAt(i)=='s')){
//                token.add(1);
//                i++;
//            }
//            //memberikan token not
//            else if(temp.charAt(i)=='n'){
//                i++;
//            }
//            if(temp.charAt(i)=='o'){
//                i++;
//            }if(temp.charAt(i)=='t'){
//                token.add(2);
//                i++;
//            }else{
//                token.add(0);
//            }
//        }
//        //memberikan token and
//        if(temp.charAt(i)=='a'){
//            i++;
//            if(temp.charAt(i)=='n'){
//                i++;
//                if(temp.charAt(i)=='d'){
//                    token.add(3);
//                    i++;
//                }else{
//                    token.add(-1);
//                    i=temp.length();
//                }
//            }else{
//                token.add(-1);
//                i=temp.length();
//            }
//        //memberikan token or
//        }else if (temp.charAt(i)=='o'){
//            i++;
//            if (temp.charAt(i)=='r'){
//                token.add(4);
//                i++;   
//            }else{
//                token.add(-1);
//                i=temp.length();
//            }
//        }
//        //memberikan token xor
//        else if (temp.charAt(i)=='x'){
//            i++;
//            if(temp.charAt(i)=='o'){
//                i++;
//                if(temp.charAt(i)=='r'){
//                    token.add(5);
//                    i++;
//                }else{
//                    token.add(-1);
//                    i=temp.length();
//                }
//            }else{
//                token.add(-1);
//            }
//        }
//        //memberikan token if atau iff
//        else if (temp.charAt(i)=='i'){
//            i++;
//            if (temp.charAt(i)=='f'){
//                token.add(6);
//                i++;
//                if (i<temp.length() && temp.charAt(i)=='f'){
//                    token.remove(token.size()-1);
//                    token.add(8);
//                    i++;
//                }
//            }
//        }
//        //memberikan token then
//        else if (temp.charAt(i)=='t'){
//            i++;
//            if (temp.charAt(i)=='h'){
//                i++;
//                if (temp.charAt(i)=='e'){
//                    i++;
//                    if (temp.charAt(i)=='n'){
//                        token.add(7);
//                        i++;
//                    }else{
//                        token.add(-1);
//                        i=temp.length();
//                    }
//                }else{
//                    token.add(-1);
//                    i=temp.length();
//                }
//            }else{
//                token.add(-1);
//                i=temp.length();
//            }
//        }
//        //memberikan token buka kurung '('
//        else if (temp.charAt(i)=='('){
//            token.add(9);
//            i++;
//        }
//        //memberikan token tutup kurung ')'
//        else if (temp.charAt(i)==')'){
//            token.add(10);
//            i++;
//        }else{
//            token.add(-1);
//            i=temp.length();
//        }
//=====================================================================================================================

    LexicalAnalyzer la = new LexicalAnalyzer(temp, token);
    lexer.add(la);
    la = null;
    temp = "";
    /**
     * @param args the command line arguments
     */
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form 
        */
    }

    
   public static void main(String args[]){
    /**
     * @param args the command line arguments
     */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analyzebtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField tInput;
    private javax.swing.JTextField tNotif;
    // End of variables declaration//GEN-END:variables
}
